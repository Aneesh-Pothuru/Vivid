{"ast":null,"code":"var _jsxFileName = \"/Users/aneeshpothuru/Documents/GitHubProjects/vivid-app/frontend/src/components/TheData/Data.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"state\",\n  label: \"State\",\n  minWidth: 170\n}, {\n  id: \"code\",\n  label: \"Postal\\u00a0Code\",\n  minWidth: 100\n}, {\n  id: \"cases\",\n  label: \"Confirmed\\u00a0Cases\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"deaths\",\n  label: \"Confirmed\\u00a0Deaths\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"recovered\",\n  label: \"Confirmed\\u00a0Recovered\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString(\"en-US\")\n}];\n\nfunction createData(state, code, cases, deaths, recovered) {\n  return {\n    state,\n    code,\n    cases,\n    deaths,\n    recovered\n  };\n}\n\nconst rows = [createData(\"Alabama\", \"AL\", 0, 0, 0), createData(\"Alaska\", \"AK\", 0, 0, 0), createData(\"Arizona\", \"AZ\", 0, 0, 0), createData(\"Arkansas\", \"AR\", 0, 0, 0), createData(\"California\", \"CA\", 0, 0, 0), createData(\"Colorado\", \"CO\", 0, 0, 0), createData(\"Connecticut\", \"CT\", 0, 0, 0), createData(\"Delaware\", \"DE\", 0, 0, 0), createData(\"Florida\", \"FL\", 0, 0, 0), createData(\"Georgia\", \"GA\", 0, 0, 0), createData(\"Hawaii\", \"HI\", 0, 0, 0), createData(\"Idaho\", \"ID\", 0, 0, 0), createData(\"Illinois\", \"IL\", 0, 0, 0), createData(\"Indiana\", \"IN\", 0, 0, 0), createData(\"Iowa\", \"IA\", 0, 0, 0), createData(\"Kansas\", \"KS\", 0, 0, 0), createData(\"Kentucky\", \"KY\", 0, 0, 0), createData(\"Louisiana\", \"LA\", 0, 0, 0), createData(\"Maine\", \"ME\", 0, 0, 0), createData(\"Maryland\", \"MD\", 0, 0, 0), createData(\"Massachusetts\", \"MA\", 0, 0, 0), createData(\"Michigan\", \"MI\", 0, 0, 0), createData(\"Minnesota\", \"MN\", 0, 0, 0), createData(\"Mississippi\", \"MS\", 0, 0, 0), createData(\"Missouri\", \"MO\", 0, 0, 0), createData(\"Montana\", \"MT\", 0, 0, 0), createData(\"Nebraska\", \"NE\", 0, 0, 0), createData(\"Nevada\", \"NV\", 0, 0, 0), createData(\"New Hampshire\", \"NH\", 0, 0, 0), createData(\"New Jersey\", \"NJ\", 0, 0, 0), createData(\"New Mexico\", \"NM\", 0, 0, 0), createData(\"New York\", \"NY\", 0, 0, 0), createData(\"North Carolina\", \"NC\", 0, 0, 0), createData(\"North Dakota\", \"ND\", 0, 0, 0), createData(\"Ohio\", \"OH\", 0, 0, 0), createData(\"Oklahoma\", \"OK\", 0, 0, 0), createData(\"Oregon\", \"OR\", 0, 0, 0), createData(\"Pennsylvania\", \"PA\", 0, 0, 0), createData(\"Rhode Island\", \"RI\", 0, 0, 0), createData(\"South Carolina\", \"SC\", 0, 0, 0), createData(\"South Dakota\", \"SD\", 0, 0, 0), createData(\"Tennessee\", \"TN\", 0, 0, 0), createData(\"Texas\", \"TX\", 0, 0, 0), createData(\"Utah\", \"UT\", 0, 0, 0), createData(\"Vermont\", \"VT\", 0, 0, 0), createData(\"Virginia\", \"VA\", 0, 0, 0), createData(\"Washington\", \"WA\", 0, 0, 0), createData(\"West Virginia\", \"WV\", 0, 0, 0), createData(\"Wisconsin\", \"WI\", 0, 0, 0), createData(\"Wyoming\", \"WY\", 0, 0, 0)];\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  container: {\n    maxHeight: 440\n  }\n});\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, column.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 27\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/aneeshpothuru/Documents/GitHubProjects/vivid-app/frontend/src/components/TheData/Data.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","createData","state","code","cases","deaths","recovered","rows","useStyles","root","width","container","maxHeight","StickyHeadTable","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"state\", label: \"State\", minWidth: 170 },\n  { id: \"code\", label: \"Postal\\u00a0Code\", minWidth: 100 },\n  {\n    id: \"cases\",\n    label: \"Confirmed\\u00a0Cases\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"deaths\",\n    label: \"Confirmed\\u00a0Deaths\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n  {\n    id: \"recovered\",\n    label: \"Confirmed\\u00a0Recovered\",\n    minWidth: 170,\n    align: \"right\",\n    format: (value) => value.toLocaleString(\"en-US\"),\n  },\n];\n\nfunction createData(state, code, cases, deaths, recovered) {\n  return { state, code, cases, deaths, recovered };\n}\n\nconst rows = [\n  createData(\"Alabama\", \"AL\", 0, 0, 0),\n  createData(\"Alaska\", \"AK\", 0, 0, 0),\n  createData(\"Arizona\", \"AZ\", 0, 0, 0),\n  createData(\"Arkansas\", \"AR\", 0, 0, 0),\n  createData(\"California\", \"CA\", 0, 0, 0),\n  createData(\"Colorado\", \"CO\", 0, 0, 0),\n  createData(\"Connecticut\", \"CT\", 0, 0, 0),\n  createData(\"Delaware\", \"DE\", 0, 0, 0),\n  createData(\"Florida\", \"FL\", 0, 0, 0),\n  createData(\"Georgia\", \"GA\", 0, 0, 0),\n  createData(\"Hawaii\", \"HI\", 0, 0, 0),\n  createData(\"Idaho\", \"ID\", 0, 0, 0),\n  createData(\"Illinois\", \"IL\", 0, 0, 0),\n  createData(\"Indiana\", \"IN\", 0, 0, 0),\n  createData(\"Iowa\", \"IA\", 0, 0, 0),\n  createData(\"Kansas\", \"KS\", 0, 0, 0),\n  createData(\"Kentucky\", \"KY\", 0, 0, 0),\n  createData(\"Louisiana\", \"LA\", 0, 0, 0),\n  createData(\"Maine\", \"ME\", 0, 0, 0),\n  createData(\"Maryland\", \"MD\", 0, 0, 0),\n  createData(\"Massachusetts\", \"MA\", 0, 0, 0),\n  createData(\"Michigan\", \"MI\", 0, 0, 0),\n  createData(\"Minnesota\", \"MN\", 0, 0, 0),\n  createData(\"Mississippi\", \"MS\", 0, 0, 0),\n  createData(\"Missouri\", \"MO\", 0, 0, 0),\n  createData(\"Montana\", \"MT\", 0, 0, 0),\n  createData(\"Nebraska\", \"NE\", 0, 0, 0),\n  createData(\"Nevada\", \"NV\", 0, 0, 0),\n  createData(\"New Hampshire\", \"NH\", 0, 0, 0),\n  createData(\"New Jersey\", \"NJ\", 0, 0, 0),\n  createData(\"New Mexico\", \"NM\", 0, 0, 0),\n  createData(\"New York\", \"NY\", 0, 0, 0),\n  createData(\"North Carolina\", \"NC\", 0, 0, 0),\n  createData(\"North Dakota\", \"ND\", 0, 0, 0),\n  createData(\"Ohio\", \"OH\", 0, 0, 0),\n  createData(\"Oklahoma\", \"OK\", 0, 0, 0),\n  createData(\"Oregon\", \"OR\", 0, 0, 0),\n  createData(\"Pennsylvania\", \"PA\", 0, 0, 0),\n  createData(\"Rhode Island\", \"RI\", 0, 0, 0),\n  createData(\"South Carolina\", \"SC\", 0, 0, 0),\n  createData(\"South Dakota\", \"SD\", 0, 0, 0),\n  createData(\"Tennessee\", \"TN\", 0, 0, 0),\n  createData(\"Texas\", \"TX\", 0, 0, 0),\n  createData(\"Utah\", \"UT\", 0, 0, 0),\n  createData(\"Vermont\", \"VT\", 0, 0, 0),\n  createData(\"Virginia\", \"VA\", 0, 0, 0),\n  createData(\"Washington\", \"WA\", 0, 0, 0),\n  createData(\"West Virginia\", \"WV\", 0, 0, 0),\n  createData(\"Wisconsin\", \"WI\", 0, 0, 0),\n  createData(\"Wyoming\", \"WY\", 0, 0, 0),\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n  },\n});\n\nexport default function StickyHeadTable() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <div className=\"margin\">\n      <Paper className={classes.root}>\n        <TableContainer className={classes.container}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map((column) => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row) => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.code}\n                    >\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[10, 25, 100]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}